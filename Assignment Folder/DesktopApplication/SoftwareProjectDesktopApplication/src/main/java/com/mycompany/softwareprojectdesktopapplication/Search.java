/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.softwareprojectdesktopapplication;
import java.awt.Color;
import java.sql.*;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Juan 10
 */
public class Search extends javax.swing.JFrame {

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        SearchInputField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ErrorField = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search Products");

        SearchBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        SearchInputField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SearchInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchInputFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Insert Query Here: ");

        ErrorField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ErrorField.setForeground(new java.awt.Color(255, 0, 0));
        ErrorField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        DataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(DataTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(683, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(SearchBtn))
                    .addComponent(ErrorField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ErrorField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchInputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchInputFieldActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
        boolean ValidatedKeyword = false; 
        int ClothId = 0, TeamId = 0, KitId = 0;
        String Keyword =
                SearchInputField.getText();
        if(Keyword.equals("")){
            ErrorField.setForeground(Color.red);
            ErrorField.setText("Search Bar must be filled and have no numbers");
        }
        else{
            for(int i = 0; i < (Keyword.length()); i++){
                char letter = Keyword.charAt(i);
                if(Character.isDigit(letter)){
                    ErrorField.setForeground(Color.red);
                    ErrorField.setText("Search Bar must be filled and have no numbers");
                    break;
                }
                else{
                    ValidatedKeyword = true;
                }
            }
            if(ValidatedKeyword){
                if(Keyword.equals("Shirt") || Keyword.equals("Shorts") || Keyword.equals("Socks")){
                try { 
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sdprojectdb", "root", "");
                    PreparedStatement stmt = con.prepareStatement("SELECT * FROM cloth WHERE Type = ?");
                    stmt.setString(1, Keyword);
                    ResultSet RowsSelected = stmt.executeQuery();
                    while (RowsSelected.next()) {
                        ClothId = RowsSelected.getInt(1);
                    }
                    con.close();
                } catch (Exception e) {
                    e.printStackTrace();
                    System.out.println("Query Failed");
                }
                
                try { 
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sdprojectdb", "root", "");
                    PreparedStatement stmt = con.prepareStatement("SELECT * FROM product WHERE Cloth_Id = ?");
                    stmt.setInt(1, ClothId);
                    ResultSet RowsSelected = stmt.executeQuery();
                    DataTable.setModel(DbUtils.resultSetToTableModel(RowsSelected));
                    ErrorField.setForeground(Color.green);
                    ErrorField.setText("Query Results were successful and all data was retrieved");
                    con.close();
                } catch (Exception e) {
                    e.printStackTrace();
                    System.out.println("Query Failed");
                }
            }
                else if(Keyword.equals("Home") || Keyword.equals("Away") || Keyword.equals("Third")){
                    try { 
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sdprojectdb", "root", "");
                        PreparedStatement stmt = con.prepareStatement("SELECT * FROM kit WHERE Type = ?");
                        stmt.setString(1, Keyword);
                        ResultSet RowsSelected = stmt.executeQuery();
                        while (RowsSelected.next()) {
                            KitId = RowsSelected.getInt(1);
                        }
                        con.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                        System.out.println("Query Failed");
                    }

                    try { 
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sdprojectdb", "root", "");
                        PreparedStatement stmt = con.prepareStatement("SELECT * FROM product WHERE Kit_Id = ?");
                        stmt.setInt(1, KitId);
                        ResultSet RowsSelected = stmt.executeQuery();
                        DataTable.setModel(DbUtils.resultSetToTableModel(RowsSelected));
                        ErrorField.setForeground(Color.green);
                        ErrorField.setText("Query Results were successful and all data was retrieved");
                        con.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                        System.out.println("Query Failed");
                    }
                }
                else if(Keyword.equals("Juventus") || Keyword.equals("Bayern Munich") || Keyword.equals("Paris Saint Germain") || Keyword.equals("Manchester City") || Keyword.equals("Real Madrid")){
                    try { 
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sdprojectdb", "root", "");
                        PreparedStatement stmt = con.prepareStatement("SELECT * FROM team WHERE Name = ?");
                        stmt.setString(1, Keyword);
                        ResultSet RowsSelected = stmt.executeQuery();
                        while (RowsSelected.next()) {
                            TeamId = RowsSelected.getInt(1);
                        }
                        con.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                        System.out.println("Query Failed");
                    }

                    try { 
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sdprojectdb", "root", "");
                        PreparedStatement stmt = con.prepareStatement("SELECT * FROM product WHERE Team_Id = ?");
                        stmt.setInt(1, TeamId);
                        ResultSet RowsSelected = stmt.executeQuery();
                        DataTable.setModel(DbUtils.resultSetToTableModel(RowsSelected));
                        ErrorField.setForeground(Color.green);
                        ErrorField.setText("Query Results were successful and all data was retrieved");
                        con.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                        System.out.println("Query Failed");
                    }
                }
                else{
                    ErrorField.setForeground(Color.red);
                    ErrorField.setText("Keyword Inputted not Recognised");
                }
            
            
            
            
            
            
            }
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DataTable;
    private javax.swing.JLabel ErrorField;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchInputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
